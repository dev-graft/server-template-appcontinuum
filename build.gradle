plugins {
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" apply false
	id 'org.springframework.boot' version '2.7.3' apply false
	id 'io.spring.dependency-management' version '1.0.15.RELEASE' apply false
	id 'java-library'
}

subprojects {
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: "com.ewerk.gradle.plugins.querydsl"

	group = 'devgraft'
	version = null
	sourceCompatibility = '17'

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation fileTree(dir: 'libs', include: ['*.jar'])
		implementation platform('org.springframework.cloud:spring-cloud-dependencies:2021.0.0')
		implementation 'org.springframework.boot:spring-boot-starter'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		if (!project.name.contains("support-mapper")) {
			implementation(project(':features:support-mapper'))
		}
	}

	test {
		useJUnitPlatform()
	}

	if (!project.name.contains("app-")) {
		bootJar { enabled = false }
	}

	clean {
		delete 'out'
		delete 'src/main/generated'
	}

	def querydslSrcDir = "$buildDir/generated/querydsl"

	sourceSets {
		main {
			java {
				srcDirs = ['src/main/java', querydslSrcDir]
			}
		}
	}

	querydsl {
		library = "com.querydsl:querydsl-apt"
		jpa = true
		querydslSourcesDir = querydslSrcDir
	}

	compileQuerydsl {
		options.annotationProcessorPath = configurations.querydsl
	}

	configurations {
		querydsl.extendsFrom compileClasspath
	}
}